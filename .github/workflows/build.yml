name: Create and publish a Docker image

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  LATEST_ANSIBLE_VERSION: "8"
  LATEST_PYTHON_VERSION: "3.11"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        ansible_version: [ "6", "7", "8" ]
        python_version: [ "3.8", "3.10", "3.11" ]
        # Check version compatibility, starting from https://pypi.org/project/ansible/#history
        # Hit an ansible version and make sure python version are listed in "Programming Language" section
        exclude:
          - ansible_version: "6"
            python_version: "3.11"
          - ansible_version: "7"
            python_version: "3.8"
          - ansible_version: "8"
            python_version: "3.8"
        include:
          - ansible_version: "6"
            latest_python_version: "3.10"
          - ansible_version: "7"
            latest_python_version: "3.11"
          - ansible_version: "8"
            latest_python_version: "3.11"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{raw}}-ansible${{matrix.ansible_version}}-py${{matrix.python_version}}
            type=semver,pattern=latest-ansible${{matrix.ansible_version}}-py${{matrix.python_version}}
            type=semver,pattern=ansible${{matrix.ansible_version}}-py${{matrix.python_version}}
            ${{ (matrix.python_version == matrix.latest_python_version) && join(['type=semver'], '+') || '' }}

          flavor: |
            latest=${{ (matrix.ansible_version == env.LATEST_ANSIBLE_VERSION && matrix.python_version == env.LATEST_PYTHON_VERSION) && 'true' || 'false'}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            PYTHON_VERSION=${{matrix.python_version}}
            ANSIBLE_VERSION=${{matrix.ansible_version}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
